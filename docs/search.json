{
  "articles": [
    {
      "path": "about.html",
      "title": "About me",
      "description": "",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2022-04-28T08:40:43+02:00"
    },
    {
      "path": "adjcurves.html",
      "title": "Adjusted survival curves",
      "author": [],
      "contents": "\nBackground\nCole and Hernán (2004) uses\nAnalysis steps of Cole and Hernan 2004\nThanks to Marcel Zwahlen for data preparation.\n\n\n\n\n\n\nHead of data\n\n# A tibble: 6 × 4\n        ldh event  time        tx\n  <dbl+lbl> <dbl> <dbl> <dbl+lbl>\n1  0 [<200]     1   154 0 [S1_S3]\n2  0 [<200]     1   946 0 [S1_S3]\n3  0 [<200]     1  1401 0 [S1_S3]\n4  0 [<200]     1  1888 0 [S1_S3]\n5  0 [<200]     0  2558 0 [S1_S3]\n6  0 [<200]     0  3135 0 [S1_S3]\n\nDescriptive table\n\n\n\nKaplan-Meier curve\n\n\nmod <- survfit(Surv(time, event) ~ factor(tx), data = data)\ncoxph(Surv(time, event) ~ factor(tx), data = data)\n\n\nCall:\ncoxph(formula = Surv(time, event) ~ factor(tx), data = data)\n\n               coef exp(coef) se(coef)      z      p\nfactor(tx)1 -0.6274    0.5340   0.2967 -2.114 0.0345\n\nLikelihood ratio test=4.36  on 1 df, p=0.03674\nn= 76, number of events= 46 \n\nlibrary(survminer)\nplot(mod, col=1:2, data=data)\nggsurvplot(mod, data=data)\n\n\n\n?ggsurvplot\n\n\n\nIPW modelling\n\n\n# IPW denominator\nmod <- glm(tx ~ ldh, data=data, family=binomial())\nsummary(mod)\n\n\n\nCall:\nglm(formula = tx ~ ldh, family = binomial(), data = data)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.7344  -0.9895   0.7090   0.7090   1.3777  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   1.2528     0.3586   3.494 0.000476 ***\nldh          -1.7123     0.5143  -3.329 0.000871 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 101.054  on 75  degrees of freedom\nResidual deviance:  89.054  on 74  degrees of freedom\nAIC: 93.054\n\nNumber of Fisher Scoring iterations: 4\n\n# OR\ndata.frame(or=exp(mod$coefficients[2]), lci=exp(confint.default(mod)[2,1]), \n           uci=exp(confint.default(mod)[2,2]))\n\n\n           or       lci       uci\nldh 0.1804511 0.0658507 0.4944914\n\ndata$ipw <- NA\n# Probabilty of treatment\ndata$ipw <- predict(mod, data=data, type=\"response\")\n# Probabilty of non-treatment\ndata$ipw[data$tx==0] <- 1-predict(mod, data=data, type=\"response\")[data$tx==0]\n\n# Unstabilized weights\ndata$ipw_tmp <- 1/data$ipw\n\nlibrary(survey)\nsvy_design <- svydesign(id=~1, weights=~ipw_tmp, data=data)\n\ntable(tx=data$tx, ldh=data$ldh)\n\n\n   ldh\ntx   0  1\n  0 10 19\n  1 35 12\n\nsvytable(~tx+ldh, design=svy_design)\n\n\n   ldh\ntx   0  1\n  0 45 31\n  1 45 31\n\n# Stabilized weights\nmod0 <- glm(tx ~ 1, data=data, family=binomial())\ndata$ipw0 <- predict(mod0, data=data, type=\"response\")\ndata$ipw0[data$tx==0] <- 1-predict(mod0, data=data, type=\"response\")[data$tx==0]\ndata$ipw <- data$ipw0/data$ipw\n\n\n\nStatement 3\np47: Table 2, column “sw”\n\n\ndescribe(data$ipw)\n\n\ndata$ipw \n       n  missing distinct     Info     Mean      Gmd \n      76        0        4    0.881        1   0.4277 \n                                                  \nValue      0.6225762 0.7951128 1.5975877 1.7171053\nFrequency         19        35        12        10\nProportion     0.250     0.461     0.158     0.132\n\nStatement 3\np47: Table 2, column “Pseudo N”\n\n\nsvy_design <- svydesign(id=~1, weights=~ipw, data=data)\n\ntable(tx=data$tx, ldh=data$ldh)\n\n\n   ldh\ntx   0  1\n  0 10 19\n  1 35 12\n\nsvytable(~tx+ldh, design=svy_design)\n\n\n   ldh\ntx         0        1\n  0 17.17105 11.82895\n  1 27.82895 19.17105\n\nStatement 3\np47: In the pseudopopulation, the indicator of elevated LDH is no longer associated with treatment (odds ratio = 1.0; robust 95% confidence interval: 0.4, 2.7).\n\n\n# Robust CIs\nmod <- svyglm(tx ~ ldh, data=data, family=binomial(), design=svy_design)\nsummary(mod)\n\n\n\nCall:\nsvyglm(formula = tx ~ ldh, design = svy_design, family = binomial(), \n    data = data)\n\nSurvey design:\nsvydesign(id = ~1, weights = ~ipw, data = data)\n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)\n(Intercept) 4.829e-01  3.610e-01   1.338    0.185\nldh         2.251e-11  5.177e-01   0.000    1.000\n\n(Dispersion parameter for binomial family taken to be 1.013333)\n\nNumber of Fisher Scoring iterations: 4\n\n# OR\ndata.frame(or=exp(mod$coefficients[2]), lci=exp(confint.default(mod)[2,1]), \n           uci=exp(confint.default(mod)[2,2]))\n\n\n    or       lci      uci\nldh  1 0.3624864 2.758724\n\nStatement 3\np47: The estimated IPW hazard ratio comparing treatment S4 against S1—S3 was 1.1 (robust 95% confidence interval: 0.6, 2.1; robust P = 0.78), indistinguishable from the results attained from standard covariate adjustment (adjusted hazard ratio = 1.1; 95% confidence interval: 0.6, 2.1).\n\n\n# Adjusted Cox\nmod <- coxph(Surv(time, event) ~ factor(tx)+factor(ldh), data=data)\nmod\n\n\nCall:\ncoxph(formula = Surv(time, event) ~ factor(tx) + factor(ldh), \n    data = data)\n\n               coef exp(coef) se(coef)     z        p\nfactor(tx)1  0.1101    1.1164   0.3244 0.339    0.734\nfactor(ldh)1 2.0780    7.9884   0.3585 5.796 6.81e-09\n\nLikelihood ratio test=40.43  on 2 df, p=1.659e-09\nn= 76, number of events= 46 \n\n# OR\ndata.frame(or=exp(mod$coefficients), lci=exp(confint.default(mod)[,1]), \n           uci=exp(confint.default(mod)[,2]))\n\n\n                   or      lci      uci\nfactor(tx)1  1.116441 0.591117  2.10862\nfactor(ldh)1 7.988403 3.956079 16.13077\n\n# IPW adjusted Cox\nmod <- svycoxph(Surv(time, event) ~ factor(tx),  design=svy_design)\nmod\n\n\nCall:\nsvycoxph(formula = Surv(time, event) ~ factor(tx), design = svy_design)\n\n               coef exp(coef) se(coef) robust se     z     p\nfactor(tx)1 0.09022   1.09441  0.30368   0.32911 0.274 0.784\n\nLikelihood ratio test=  on 1 df, p=\nn= 76, number of events= 46 \n\n# OR\ndata.frame(or=exp(mod$coefficients), lci=exp(confint.default(mod)[,1]), \n           uci=exp(confint.default(mod)[,2]))\n\n\n                  or       lci      uci\nfactor(tx)1 1.094413 0.5741748 2.086021\n\n# Weighted Kaplan-Meier curves\nmod_wght <- svykm(Surv(time, event) ~ factor(tx), design=svy_design)\nmod_wght[[1]][2]\n\n\n$surv\n [1] 1.0000000 0.9785319 0.9570637 0.8978532 0.8763850 0.8549169\n [7] 0.8334488 0.8119806 0.7905125 0.7690443 0.7475762 0.7261080\n[13] 0.7046399 0.6831717 0.6617036 0.6402355 0.6187673 0.5972992\n[19] 0.5380886 0.5166205 0.4951524 0.4359418 0.3767313 0.3767313\n[25] 0.3767313 0.3767313 0.3767313 0.3767313 0.3767313 0.3767313\n\nplot(mod_wght[[1]], col=\"black\")\nlines(mod_wght[[2]], col=\"red\")\n\n\n\nlibrary(rsample)\nboot_data <- bootstraps(data=data, times=1000, strata=event, apparent=T)\n\nkm_split <- function(split) {\n  \n  mod <- glm(tx ~ ldh, data=analysis(split), family=binomial())\n  \n  ipw <- predict(mod, data=analysis(split), type=\"response\")\n  ipw[analysis(split)$tx==0] <- 1-predict(mod, data=analysis(split), type=\"response\")[analysis(split)$tx==0]\n\n  svy_design <- svydesign(id=~1, weights=~ipw, data=analysis(split))\n\n   mod <- svykm(Surv(time, event) ~ factor(tx), design=svy_design)\n  data.frame(group=c(rep(1, length(mod[[1]]$time)), rep(2, length(mod[[2]]$time))), time=c(mod[[1]]$time, mod[[2]]$time), surv=c(mod[[1]]$surv, mod[[2]]$surv))\n}\n\n# boot_res <- boot_data %>% mutate(model=map(splits, km_split))\n# boot_id0 <- map(boot_res$id, function(x) x) %>% unlist()\n# boot_n <- map(boot_res$model, function(x) nrow(x)) %>% unlist()\n# boot_coef_group <- map(boot_res$model, function(x) x[,1]) %>% unlist()\n# boot_coef_time <- map(boot_res$model, function(x) x[,2]) %>% unlist()\n# boot_coef_surv <- map(boot_res$model, function(x) x[,3]) %>% unlist()\n# data_gg <- bind_cols(boot=rep(boot_id0, boot_n), group=boot_coef_group, time=boot_coef_time, surv=boot_coef_surv)\n\n# data_gg_agg <- data_gg %>% filter(boot!=\"Apparent\") %>% group_by(group, time) %>% summarise(surv_mean=median(surv), upper=quantile(surv, prob=0.975), lower=quantile(surv, prob=0.025))\n\n\n# ggplot(data_gg_agg, aes(x=time, y=lower, colour=factor(group)))+geom_point()+geom_point(aes(x=time, y=upper, colour=factor(group)))\n\n\n\n\n\n\nCole, Stephen R., and Miguel A. Hernán. 2004. “Adjusted Survival Curves with Inverse Probability Weights.” Computer Methods and Programs in Biomedicine 75 (1): 45–49. https://doi.org/10.1016/j.cmpb.2003.10.004.\n\n\n\n\n",
      "last_modified": "2022-04-28T11:26:36+02:00"
    },
    {
      "path": "immortal.html",
      "title": "Adjusted survival curves",
      "author": [],
      "contents": "\nBackground\nR Core Team (2021) said…\nExample(s)\nConclusion\nReferences\n\n\n\nR Core Team. 2021. R: A Language and Environment for Statistical Computing. Vienna, Austria: R Foundation for Statistical Computing. https://www.R-project.org/.\n\n\n\n\n",
      "last_modified": "2022-04-28T11:12:04+02:00"
    },
    {
      "path": "index.html",
      "title": "Vignettes",
      "description": "",
      "author": [],
      "contents": "\nClick on the upper right button for topic selection.\n\n\n\n",
      "last_modified": "2022-04-28T11:10:18+02:00"
    },
    {
      "path": "new.html",
      "title": "New",
      "author": [],
      "contents": "\n\n\n\n\n\n\n\n\nVignettes\n\n\n\n\nTopics\n \n▾\n\n\nImmortal time bias\nNew\n\n\n☰\n\n\n  \n    \n      \n        \n        \n        \n      \n      \n    \n    \n      \n  \n    Topics\n     \n    \n  \n  \n      Immortal time bias\n    \n    \n      New\n    \n  \n      \n  \n\n\n\n\n\n\nNew\n\n\n\n\n\nBackground\n\n\nExample(s)\n\n\nConclusion\n\n\nReferences\n\n\n\n\n\n\n\n\n\n\n\n\n\n// add bootstrap table styles to pandoc tables\nfunction bootstrapStylePandocTables() {\n  $('tr.odd').parent('tbody').parent('table').addClass('table table-condensed');\n}\n$(document).ready(function () {\n  bootstrapStylePandocTables();\n});\n\n\n\n$(document).ready(function () {\n  window.buildTabsets(\"TOC\");\n});\n\n$(document).ready(function () {\n  $('.tabset-dropdown > .nav-tabs > li').click(function () {\n    $(this).parent().toggleClass('nav-tabs-open');\n  });\n});\n\n  (function () {\n    var script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src  = \"https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\";\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\n  })();\n",
      "last_modified": "2022-04-28T11:03:36+02:00"
    }
  ],
  "collections": []
}
